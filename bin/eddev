#!/usr/bin/env php
<?php declare(strict_types=1);

use GuySartorelli\DdevWrapper\Application;
use GuySartorelli\ExtendedDdev\Command\Create;
use GuySartorelli\ExtendedDdev\Command\Destroy;
use GuySartorelli\ExtendedDdev\Command\GitSetRemotes;
use GuySartorelli\ExtendedDdev\Command\PhpUnit;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Dotenv\Dotenv;
use Symfony\Component\Filesystem\Path;

if (PHP_VERSION_ID < 80100) {
    echo 'Silverstripe Developer Kit requires at least PHP 8.1 and you are running ' . PHP_VERSION
     . ', please upgrade PHP. Aborting.' . PHP_EOL;
    exit(1);
}

$autoloadFile = __DIR__ . DIRECTORY_SEPARATOR . '..' . DIRECTORY_SEPARATOR . 'vendor' . DIRECTORY_SEPARATOR . 'autoload.php';
if (!file_exists($autoloadFile)) {
    throw new RuntimeException('You need to run `composer install` to get the relevant dependencies');
}
require_once $autoloadFile;

// Boot environment variables
$envFilePath = Path::canonicalize(Path::join(__DIR__, '../', '.env'));
if (!file_exists($envFilePath)) {
    throw new RuntimeException('.env file not found. Copy the ".env.example" file to ".env" and set the values appropriately.');
}
$envConfig = new Dotenv();
$envConfig->usePutenv(true);
$envConfig->bootEnv($envFilePath);

// Register global commands
$application = new Application('eddev');
$application->addCommands([
    new Create(),
    new Destroy(),
    new PhpUnit(),
    new GitSetRemotes(),
]);
// Register shortcut commands
$application->addShortcutCommand('sake', 'Run Silverstripe CMS sake CLI inside the web container', 'exec', ['sake'])
    ->addArgument('arguments', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, 'Arguments to be passed through to the DDEV command, if any');
$application->addShortcutCommand('flush', 'Flush the Silverstripe CMS cache', 'exec', ['sake', 'dev', 'flush=1']);
$application->addShortcutCommand('dev/build', 'Build the Silverstripe CMS database', 'exec', ['sake', 'dev/build', 'flush=1']);
$application->addShortcutCommand('behat', 'Run behat tests', 'exec', ['behat'])
    ->addArgument('module', InputArgument::REQUIRED, 'The module to run tests against')
    ->addOption('tags', mode: InputOption::VALUE_REQUIRED, default: 'gsat');
$application->addShortcutCommand('mailpit', 'Launch mailpit in the default browser', 'launch', ['-m']);
// Start app
$application->run();
